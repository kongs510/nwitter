{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","components/Navigation.js","routes/Profile.js","routes/Home2.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","prvider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Navigation","display","justifyContent","marginTop","to","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Home2","nweets","setNweets","useEffect","orderBy","onSnapshot","Snapshot","nweetArray","docs","map","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05e92e2b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () =>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error,setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {\r\n                name,\r\n                value\r\n            }\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else if (name === \"password\") {\r\n            setPassword(value)\r\n        }\r\n    } \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                //create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                //Log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data)\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    };\r\n    const toggleAccount = () =>setNewAccount((prev)=>!prev)\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" required=\"required\" value={email} className=\"authInput\" onChange={onChange} />\r\n                <input type=\"password\" name=\"password\" placeholder=\"password\" required=\"required\" value={password} className=\"authInput\" onChange={onChange}/>\r\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"create Account\":\"Sign In\"}/>\r\n                        {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\":\"create Account\"}</span>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import React, {useState} from \"react\";\r\nimport {authService, firebaseInstance} from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub, } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) =>{\r\n        const {target:{name}\r\n        } = event;\r\n        let prvider;  \r\n        if(name ===\"google\"){\r\n            prvider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name ===\"github\"){\r\n            prvider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(prvider);\r\n        console.log(data);\r\n    }\r\n    return (\r\n            <div className=\"authContainer\">\r\n                <FontAwesomeIcon\r\n                    icon={faTwitter}\r\n                    color={\"#04AAFF\"}\r\n                    size=\"3x\"\r\n                    style={{ marginBottom: 30 }}\r\n                />\r\n                <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with  <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        console.log(ok);\r\n        if (ok) {\r\n            //delete nweet\r\n            await dbService\r\n                .doc(`nweets/${nweetObj.id}`)\r\n                .delete(); //텍스트 삭제\r\n            await storageService\r\n                .refFromURL(nweetObj.attachmentUrl)\r\n                .delete(); //이미지 삭제\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService\r\n            .doc(`nweets/${nweetObj.id}`)\r\n            .update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing\r\n                ? (\r\n                    <>\r\n                        < form onSubmit={onSubmit} >\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Edit your nweet\"\r\n                                value={newNweet}\r\n                                required=\"required\"\r\n                                autoFocus=\"autoFocus\"\r\n                                onChange={onChange}\r\n                                className=\"formInput\" />\r\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4 >\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} width=\"100px\" height=\"100px\" />}\r\n                        {isOwner && (\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    // nweets make component\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        console.log(userObj);\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response\r\n                .ref\r\n                .getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService\r\n            .collection(\"nweets\")\r\n            .add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNweet(value);\r\n    }\r\n\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: {\r\n            files\r\n        } } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            console.log(finishedEvent);\r\n            const { currentTarget: {\r\n                result\r\n            } } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n\r\n\r\n        //console.log(event.target.files) console.log(theFile)\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120} />\r\n                <input type=\"submit\" onChange={onChange} value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0\r\n                }} />\r\n            <input type=\"submit\" value=\"click\" /> {\r\n                attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img src={attachment} width=\"50px\" height=\"50px\" style={{ backgroundImage: attachment }} />\r\n                        <button onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            }\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default NweetFactory;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <ul\r\n        style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: 50\r\n        }}>\r\n        <li>\r\n            <Link\r\n                to=\"/\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12\r\n                }}>\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser,userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n      displayName : newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input onChange={onChange} type=\"text\" autoFocus placeholder=\"Display name\" className=\"formInput\" value={newDisplayName} />\r\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10,}} />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home2 = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n\r\n\r\n    // const getNeweets = async () => {\r\n    //     const dbNweets = await dbService.collection(\"nweets\").get();\r\n    //     dbNweets.forEach((document) => {\r\n    //         const nweetobject = {\r\n    //             ...document.data(),\r\n    //             id: document.id\r\n    //         }\r\n    //         setNweets((prev) => [\r\n    //             nweetobject, ...prev\r\n    //         ]);\r\n    //     });\r\n    //     console.log(dbNweets);\r\n    // };\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((Snapshot) => {\r\n                const nweetArray = Snapshot\r\n                    .docs\r\n                    .map((doc) => ({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }));\r\n                setNweets(nweetArray);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{\r\n                marginTop: 30\r\n            }}>\r\n                {\r\n                    nweets.map((nweet) => (\r\n                        <Nweet\r\n                            key={nweet.id}\r\n                            nweetObj={nweet}\r\n                            isOwner={nweet.creatorId === userObj.uid} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\nexport default Home2;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\nimport Home2 from \"routes/Home2\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ?\r\n                    <div style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}>\r\n                        <Route exact path=\"/\">\r\n                            {/* <Home1 userObj={userObj} /> */}\r\n                            <Home2 userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/Profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                    :\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                }\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  //console.log(authService.currentUser);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null); //log out\n      }\n      setInit(true);\n    });\n  }, [])\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    console.log(authService.currentUser.displayName);\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <> {init ? (\n      <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\n    ) : \"Initizalizing...\"}\n      <footer className=\"footer\">\n        &copy; Nwitter{new Date().getFullYear()} made by kong510\n      </footer>\n    </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\nimport firebase from \"./fbase\";\nconsole.log(firebase)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}